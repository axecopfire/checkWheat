{"version":3,"sources":["../js/main.js"],"names":["App","div","document","createElement","innerHTML","Conversation","messageList","activeCharacters","activeConversation","counter","charactersList","dialog","setConvo","render","simulateConvo","spot","Math","floor","random","length","character","message","createMessage","addMessage","then","catch","e","console","error","Promise","resolve","reject","setTimeout","push","content","p","i","section","textContent","classList","add","appendChild","root","getElementById","forEach","msg","Clock","time","Date","setInterval","tickClock","window","onload","app","body"],"mappings":"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","file":"main.8f75cf09.js","sourceRoot":"..\\src\\pages","sourcesContent":["class App {\r\n  render() {\r\n    let div = document.createElement(\"div\");\r\n    div.innerHTML = \"This was created with stuff JS\";\r\n    return div;\r\n  }\r\n}\r\n\r\nclass Conversation {\r\n  constructor() {\r\n    this.messageList = []; // rendered messagelist\r\n    this.activeCharacters = [];\r\n    this.activeConversation = [];\r\n    this.counter = 0;\r\n    this.charactersList = [\r\n      \"nes-mario\",\r\n      \"nes-ash\",\r\n      \"nes-pokeball\",\r\n      \"nes-bulbasaur\",\r\n      \"nes-charmander\",\r\n      \"nes-squirtle\",\r\n      \"nes-kirby\",\r\n    ];\r\n    this.dialog = [\r\n      [\r\n        \"Have you heard about this new game?\",\r\n        `Oh my gosh. Haven't we all?`,\r\n        `This game is everywhere.`,\r\n      ],\r\n      [\r\n        `Hey how did you end up here?`,\r\n        `I'm not sure. Last thing I remember was...`,\r\n        `I don't think we're supposed to be here.`,\r\n        `You might be right but until I'm told otherwise. I think I'll stay`,\r\n      ],\r\n      [\r\n        `Hey what are you supposed to be?`,\r\n        `Are you talking to me?`,\r\n        `There's no one else here for me to be talking to.`,\r\n        `Well this is awkward.`,\r\n      ],\r\n      [\r\n        `Is there a moderator here?`,\r\n        `Hi there, how can I help?`,\r\n        `I'm looking for how to checkWheat. It doesn't say anywhere on here`,\r\n        `Yeah, its simple enough. When it asks what you want to do. Just type in checkWheat`,\r\n        `Whoa thats awesome! Thanks!`,\r\n      ],\r\n      [\r\n        `I've spent about 40 hours playing this game. I love it!`,\r\n        `You should really keep your opinions to yourself.`,\r\n        `I won't be moderated!`,\r\n        `You're going to get kicked.`,\r\n      ],\r\n    ];\r\n    this.setConvo();\r\n    this.render();\r\n    this.simulateConvo(0);\r\n  }\r\n  setConvo() {\r\n    const spot = Math.floor(Math.random() * this.dialog.length);\r\n    const character = () =>\r\n      this.charactersList[\r\n        Math.floor(Math.random() * this.charactersList.length)\r\n      ];\r\n\r\n    this.activeConversation = this.dialog[spot];\r\n    this.activeCharacters = [character(), character()];\r\n  }\r\n\r\n  simulateConvo() {\r\n    if (this.counter >= this.activeConversation.length - 1) {\r\n      return;\r\n    }\r\n    const message = this.createMessage(\r\n      this.activeConversation[this.counter],\r\n      this.counter\r\n    );\r\n    this.addMessage(message)\r\n      .then(() => {\r\n        this.counter++;\r\n        this.render();\r\n        this.simulateConvo();\r\n      })\r\n      .catch((e) => console.error(e));\r\n  }\r\n\r\n  addMessage(message) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        this.messageList.push(message);\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  createMessage(content, counter) {\r\n    const p = document.createElement(\"p\");\r\n    const i = document.createElement(\"i\");\r\n    const section = document.createElement(\"section\");\r\n    const div = document.createElement(\"div\");\r\n\r\n    p.textContent = content;\r\n\r\n    if (counter % 2 !== 0) {\r\n      div.classList.add(\"nes-balloon\", \"from-right\", \"is-dark\");\r\n      section.classList.add(\"message\", \"custom\", \"-right\");\r\n      i.classList.add(this.activeCharacters[1]);\r\n    } else {\r\n      i.classList.add(this.activeCharacters[0]);\r\n      div.classList.add(\"nes-balloon\", \"from-left\", \"is-dark\");\r\n      section.classList.add(\"message\", \"custom\", \"-left\");\r\n    }\r\n\r\n    div.appendChild(p);\r\n    section.appendChild(div);\r\n    section.appendChild(i);\r\n    return section;\r\n  }\r\n\r\n  // for each item from the message list\r\n  // determine if its left or right\r\n  // determine which character to use\r\n\r\n  render() {\r\n    const root = document.getElementById(\"conversation\");\r\n\r\n    this.messageList.forEach((msg) => {\r\n      root.appendChild(msg);\r\n    });\r\n  }\r\n}\r\n\r\nclass Clock {\r\n  constructor() {\r\n    this.time = new Date();\r\n    this.render();\r\n    setInterval(() => this.tickClock(), 1000);\r\n  }\r\n  tickClock() {\r\n    this.render();\r\n    this.time = new Date();\r\n  }\r\n  render() {\r\n    document.getElementById(\"clock\").textContent = this.time;\r\n  }\r\n}\r\n\r\nwindow.onload = () => {\r\n  const app = new App();\r\n  new Clock();\r\n  new Conversation();\r\n\r\n  document.body.appendChild(app.render());\r\n};\r\n"]}